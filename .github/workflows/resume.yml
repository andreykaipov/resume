# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# this ends with resume which gets caught by the latter "json resume" entry in https://www.schemastore.org/api/json/catalog.json
# see https://github.com/neoclide/coc-yaml/issues/28#issuecomment-784849086
---
name: resume

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  tectonic_version: 0.15.0
  commit_message_resume: "gh-actions: add resume.pdf"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      msg: ${{ steps.build.outputs.msg }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Download Tectonic
        uses: wtfjoke/setup-tectonic@main
        with:
          tectonic-version: ${{ env.tectonic_version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Tectonic
        uses: actions/cache@v4
        env: { cache-name: cache-tectonic }
        with:
          path: ~/.cache/Tectonic
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.tex') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Build our resume
        id: build
        run: |
          ./scripts/build.sh
          echo "msg=${{ env.commit_message_resume }}" >>$GITHUB_OUTPUT
      - name: Upload PDF
        uses: actions/upload-artifact@v2
        with:
          name: resume # it'll be zipped :(
          path: resume.pdf

  update-website:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: tibdex/github-app-token@v2
        if: ${{ needs.build.outputs.build.outputs.msg != '' }}
        id: generate-token
        with:
          app_id: ${{ secrets.CATHY_CLOUD_APP_ID }}
          private_key: ${{ secrets.CATHY_CLOUD_APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        if: ${{ success() }}
        with:
          repository: andreykaipov/website
          path: /tmp/website
          ref: main
          token: ${{ steps.generate-token.outputs.token }}
      - name: Create website PR
        if: ${{ success() }}
        id: website-pr
        run: |
          mv resume.pdf /tmp/website
          cd /tmp/website
          git checkout -b auto/resume
          git add .
          git commit -m "${{ needs.build.outputs.build.outputs.msg }}"
          git push origin auto/resume
          pr=$(gh pr create --title "Update resume.pdf" --body "Automatically generated by GitHub Actions")
          echo pr=$pr >>$GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
